{
    "openapi": "3.0.0",
    "info": {
        "title": "JuiceBox Test API",
        "description": "API for JuiceBox Test Application",
        "contact": {
            "email": "aidan.armstrong@example.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/posts": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get a list of posts",
                "operationId": "3db3501546bc1365f08721cfcfccecce",
                "responses": {
                    "200": {
                        "description": "A list of posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Post"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Create a new post",
                "operationId": "547a053592489e19c9a4bf7d0f8ce80c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "My first post"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This is the content of the post"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "post": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while creating the post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get a specific post",
                "operationId": "8c69d0a743c72010a2b1d9a76f9c1071",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete a post",
                "operationId": "ae9ee528896629008e327c6f1749c9fd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Post deleted successfully"
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Post"
                ],
                "summary": "Update a post",
                "operationId": "b6a452c4cd75e145beb9f79657b99c3d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated post title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated post content"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "post": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "operationId": "d64c69c227bcaa94189f8552f9336c55",
                "responses": {
                    "200": {
                        "description": "Returns a paginated list of users"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "operationId": "30f5707ec8261e10e2b930047fcb2f15",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "6b72333a74edaccf648803c765875482",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user and get a token",
                "operationId": "7fd6912505786bf15610e828f5453efa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful, returns token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "d1d530ac6b6494cf8ed1069a007aa77b",
                "responses": {
                    "200": {
                        "description": "Logged out successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/weather": {
            "get": {
                "tags": [
                    "Weather"
                ],
                "summary": "Get weather data by location",
                "description": "Fetch weather information from OpenWeather API",
                "operationId": "22e47502a50bb11026f877b7f909379b",
                "parameters": [
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Location name to fetch weather data for",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Perth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Weather data for the given location",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Weather"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid location provided"
                    },
                    "404": {
                        "description": "Location not found"
                    },
                    "500": {
                        "description": "Unable to fetch weather data"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Post": {
                "title": "Post",
                "description": "Post model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Post"
                    },
                    "content": {
                        "type": "string",
                        "example": "This is a post content."
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Users": {
                "title": "Users",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Sample Name"
                    },
                    "email": {
                        "type": "string",
                        "example": "example@example.com."
                    },
                    "password": {
                        "type": "string",
                        "example": "#############"
                    },
                    "remember_token": {
                        "type": "string",
                        "example": "#############"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Weather": {
                "title": "Weather",
                "description": "Get OpenWeather Data"
            }
        },
        "securitySchemes": {
            "PostBearerAuth": {
                "type": "http",
                "scheme": "bearer"
            },
            "userBearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Post",
            "description": "Post"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Weather",
            "description": "Weather"
        }
    ]
}